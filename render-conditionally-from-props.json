{"index.jsx":"class Results extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n  render() {\n    return (\n      <h1>\n      {\n        this.props.fiftyFifty ? \"You win!\" : \"You lose!\"\n      }\n      </h1>\n    )\n  };\n};\n\nclass GameOfChance extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      counter: 1,\n      won: 0,\n      lost: 0\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(won) {\n    let wonCounter = this.state.won;\n    let lostCounter = this.state.lost;\n\n    if (won === true){\n       wonCounter++;\n    }\n    else{\n       lostCounter++;\n    } \n\n    this.setState({\n      counter: this.state.counter + 1,\n      won: wonCounter,\n      lost: lostCounter\n    });\n  }\n\n  randomNumber() {\n    return Math.random();\n  }\n\n  render() {\n\n    {/* Since handleClick will setState a re-render will be called so we only need to call this funtion from here.*/}\n    let number = this.randomNumber();\n    let won = number > .5;\n\n    return (\n      <div>\n        <button onClick={()=>this.handleClick(won)}>Play Again</button>\n        { /* change code below this line */ }\n          <Results fiftyFifty={won} />\n        { /* change code above this line */ }\n        <p>{'Turn: ' + this.state.counter}</p>\n        { /*<p>{'Won: ' + this.state.won}</p>\n        <p>{'Lost: ' + this.state.lost}</p> */ }\n      </div>\n    );\n  }\n};"}